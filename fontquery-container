#! /usr/bin/python3
# fontquery-container
# Copyright (C) 2022 Red Hat, Inc.
#
# Authors:
#   Akira TAGOH  <tagoh@redhat.com>
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in
# all copies of this software.
#
# IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
# IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
#
# THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
# ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

import sys
import argparse
import shutil
import subprocess

if __name__ == '__main__':

    fccmd = {'fcmatch': 'fc-match',
             'fclist': 'fc-list'}

    parser = argparse.ArgumentParser(description='Query fonts',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('-m', '--mode',
                        default='fcmatch',
                        choices=['fcmatch', 'fclist'],
                        help='Action to perform for query')
    parser.add_argument('-v', '--verbose',
                        action='store_true',
                        help='Show more detailed logs')
    parser.add_argument('args',
                        nargs='*',
                        help='Arguments to the corresponding action')

    args = parser.parse_args()

    if not shutil.which(fccmd[args.mode]):
        print('{} is not installed'.format(fccmd[args.mode]))
        sys.exit(1)

    cmdline = [fccmd[args.mode]] + args.args
    if args.verbose:
        print('# '+' '.join(cmdline), flush=True)

    subprocess.run(cmdline)
